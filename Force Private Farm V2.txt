--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v86=v2(v0(v30,16));if v19 then local v116=v5(v86,v19);v19=nil;return v116;else return v86;end end end);local function v20(v31,v32,v33) if v33 then local v87=(v31/((5 -3)^(v32-(928 -(214 + 713)))))%((5 -3)^(((v33-((1271 -(226 + 1044)) -0)) -(v32-(2 -(1066 -(68 + 997))))) + (620 -((2416 -1861) + 64)))) ;return v87-(v87%((118 -(32 + 85)) + 0 + 0)) ;else local v88=(933 -(857 + 74))^(v32-1) ;return (((v31%(v88 + v88))>=v88) and (569 -(367 + 201))) or (0 -(0 + 0)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (959 -(892 + 65)) );v18=v18 + (4 -2) ;return (v36 * (472 -216)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + ((9 -5) -1) );v18=v18 + 4 ;return (v40 * (16777566 -(87 + 263))) + (v39 * (65716 -(50 + 17 + 113))) + (v38 * (188 + 68)) + v37 ;end local function v24() local v41=0 -0 ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==(953 -(802 + 150))) then v44=431 -(44 + 386) ;v45=(v20(v43,2 -1 ,36 -(1 + 15) ) * ((2 + 0)^((808 + 221) -(915 + (1137 -(87 + 968)))))) + v42 ;v41=5 -3 ;end if (v41==(2 + 1)) then if (v46==(0 -0)) then if (v45==(1187 -(1069 + 118))) then return v47 * (0 + (0 -0)) ;else local v126=0 -0 ;while true do if (v126==(0 -0)) then v46=860 -(814 + 45) ;v44=0 -0 ;break;end end end elseif (v46==(356 + 1535 + 156)) then return ((v45==(0 + 0)) and (v47 * ((1 -(0 -0))/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-(1814 -(368 + (1836 -(447 + 966)))) ) * (v44 + (v45/((1425 -(630 + 793))^(175 -123)))) ;end if (v41==(0 -0)) then v42=v23();v43=v23();v41=1 + 0 ;end if (v41==((16 -10) -4)) then v46=v20(v43,(1856 -(1703 + 114)) -(10 + 8) ,(820 -(376 + 325)) -88 );v47=((v20(v43,474 -((681 -265) + 26) )==(3 -2)) and  -(1 + 0)) or (1 + (0 -0)) ;v41=4 -(1 + 0) ;end end end local function v25(v48) local v49;if  not v48 then local v89=0 -0 ;while true do if (v89==(14 -(9 + 5))) then v48=v23();if (v48==(376 -(70 + 15 + 291))) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -1 );v18=v18 + v48 ;local v50={};for v67=1181 -(1123 + 57) , #v49 do v50[v67]=v2(v1(v3(v49,v67,v67)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v90,v91,v92,v93,v94,v95,v96,v97) local v90=(function() return 0;end)();local v91=(function() return;end)();local v92=(function() return;end)();while true do if (v90~= #".") then else if (v91== #":") then v92=(function() return v93()~=(1835 -(274 + 1561)) ;end)();elseif (v91==(5 -3)) then v92=(function() return v94();end)();elseif (v91== #"91(") then v92=(function() return v95();end)();end v96[v97]=(function() return v92;end)();break;end if (v90==(0 + 0)) then local v122=(function() return 0;end)();local v123=(function() return;end)();while true do if (v122~=(241 -(187 + 54))) then else v123=(function() return 0;end)();while true do if (v123~=(780 -(162 + 618))) then else v91=(function() return v93();end)();v92=(function() return nil;end)();v123=(function() return 1 + 0 ;end)();end if (v123==(1 + 0)) then v90=(function() return  #"/";end)();break;end end break;end end end end return v90,v91,v92,v93,v94,v95,v96,v97;end;end)();local v52=(function() return function(v98,v99,v100,v101,v102,v103,v104,v105,v106) local v107=(function() return 0;end)();local v98=(function() return;end)();local v99=(function() return;end)();while true do if (v107==(0 -0)) then local v124=(function() return 0;end)();while true do if (v124==(0 -0)) then v98=(function() return 0;end)();v99=(function() return nil;end)();v124=(function() return 1 + 0 ;end)();end if (v124~=(1637 -(1373 + 263))) then else v107=(function() return 1;end)();break;end end end if ((1001 -(451 + 549))~=v107) then else local v125=(function() return 0;end)();while true do if (v125==0) then local v127=(function() return 0;end)();while true do if (v127~=(0 + 0)) then else while true do if (v98==(0 -0)) then v99=(function() return v100();end)();if (v101(v99, #"|", #"|")~=(0 -0)) then else local v199=(function() return 1384 -(746 + 638) ;end)();local v200=(function() return;end)();local v201=(function() return;end)();local v202=(function() return;end)();while true do if (v199==(0 + 0)) then v200=(function() return v101(v99,2 -0 , #"91(");end)();v201=(function() return v101(v99, #"asd1",347 -(218 + 123) );end)();v199=(function() return 1;end)();end if (v199==3) then if (v101(v201, #"91(", #"-19")~= #":") then else v202[ #"?id="]=(function() return v104[v202[ #".com"]];end)();end v105[v106]=(function() return v202;end)();break;end if (v199==2) then if (v101(v201, #":", #"<")~= #"/") then else v202[1583 -(1535 + 46) ]=(function() return v104[v202[2 + 0 ]];end)();end if (v101(v201,2,1 + 1 )== #"<") then v202[ #"nil"]=(function() return v104[v202[ #"nil"]];end)();end v199=(function() return 563 -(306 + 254) ;end)();end if (v199~=1) then else local v365=(function() return 0 + 0 ;end)();while true do if (v365==(1 -0)) then v199=(function() return 2;end)();break;end if (v365==(1467 -(899 + 568))) then v202=(function() return {v102(),v102(),nil,nil};end)();if (v200==(0 -0)) then local v411=(function() return 0;end)();local v412=(function() return;end)();while true do if (v411==(603 -(268 + 335))) then v412=(function() return 0;end)();while true do if (v412~=(290 -(60 + 230))) then else v202[ #"xnx"]=(function() return v102();end)();v202[ #"0313"]=(function() return v102();end)();break;end end break;end end elseif (v200== #"]") then v202[ #"91("]=(function() return v103();end)();elseif (v200==2) then v202[ #"nil"]=(function() return v103() -((574 -(426 + 146))^(2 + 14)) ;end)();elseif (v200~= #"asd") then else local v428=(function() return 1456 -(282 + 1174) ;end)();local v429=(function() return;end)();while true do if (v428~=0) then else v429=(function() return 0;end)();while true do if (v429==(811 -(569 + 242))) then v202[ #"19("]=(function() return v103() -(2^16) ;end)();v202[ #"0313"]=(function() return v102();end)();break;end end break;end end end v365=(function() return 2 -1 ;end)();end end end end end break;end end return v98,v99,v100,v101,v102,v103,v104,v105,v106;end end end end end end end;end)();local v53=(function() return function(v108,v109,v110) local v111=(function() return 0;end)();local v112=(function() return;end)();while true do if (v111~=(0 + 0)) then else v112=(function() return 0;end)();while true do if (v112~=0) then else v108[v109-#":" ]=(function() return v110();end)();return v108,v109,v110;end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #" ",v58 do FlatIdent_7DD24,Type,Cons,v21,v24,v25,v59,v69=(function() return v51(FlatIdent_7DD24,Type,Cons,v21,v24,v25,v59,v69);end)();end v57[ #"nil"]=(function() return v21();end)();for v70= #" ",v23() do FlatIdent_C460,Descriptor,v21,v20,v22,v23,v59,v54,v70=(function() return v52(FlatIdent_C460,Descriptor,v21,v20,v22,v23,v59,v54,v70);end)();end for v71= #">",v23() do v55,v71,v28=(function() return v53(v55,v71,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1252 -(721 + 530) ];local v65=v61[2 -(0 -0) ];local v66=v61[1274 -(945 + 326) ];return function(...) local v72=v64;local v73=v65;local v74=v66;local v75=v27;local v76=2 -1 ;local v77= -(1 + (0 -0));local v78={};local v79={...};local v80=v12("#",...) -1 ;local v81={};local v82={};for v113=0 + 0 ,v80 do if ((4362>=1421) and (v113>=v74)) then v78[v113-v74 ]=v79[v113 + ((7432 -5931) -(1408 + 92)) ];else v82[v113]=v79[v113 + (1087 -(461 + 625)) ];end end local v83=(v80-v74) + (1289 -((2773 -(389 + 1391)) + 295)) ;local v84;local v85;while true do v84=v72[v76];v85=v84[1 + 0 + 0 ];if (v85<=(1215 -(44 + 374 + 753))) then if (v85<=(8 + 13)) then if ((75<=3546) and (v85<=(3 + 7))) then if (v85<=(3 + (2 -1))) then if ((2680<=3418) and (v85<=(1 + 0))) then if (v85==(0 + 0)) then local v129=v84[1 + 1 ];local v130=v82[v84[527 -(303 + 221) ]];v82[v129 + (1270 -(231 + (1989 -(783 + 168)))) ]=v130;v82[v129]=v130[v84[533 -(406 + 123) ]];else local v134=1769 -(1749 + 20) ;local v135;while true do if (v134==(0 + 0)) then v135=v84[1324 -(1249 + 73) ];v82[v135]=v82[v135]();break;end end end elseif (v85<=(1 + 1)) then v82[v84[1147 -(466 + 679) ]]=v82[v84[6 -3 ]][v82[v84[4 + 0 ]]];elseif (v85==(10 -7)) then v82[v84[5 -3 ]]=v84[1903 -(106 + 1794) ];else local v205=v84[1 + 1 ];v82[v205]=v82[v205](v13(v82,v205 + 1 + (0 -0) ,v77));end elseif (v85<=(20 -13)) then if (v85<=(13 -8)) then v82[v84[2]]=v82[v84[117 -(4 + 110) ]] + v84[588 -(57 + 527) ] ;elseif (v85==6) then local v207=0 + 0 + 0 ;local v208;while true do if ((v207==(1427 -(41 + 1386))) or (4288<2876)) then v208=v84[2];do return v82[v208](v13(v82,v208 + (104 -(17 + 86)) ,v84[3 + (311 -(309 + 2)) ]));end break;end end else local v209=v84[3 -(2 -1) ];do return v13(v82,v209,v77);end end elseif ((2462>=1147) and (v85<=(23 -15))) then v82[v84[168 -(122 + 44) ]][v84[5 -2 ]]=v84[12 -(1220 -(1090 + 122)) ];elseif (v85==(8 + 1)) then for v298=v84[1 + 1 ],v84[714 -(530 + 181) ] do v82[v298]=nil;end elseif (v82[v84[3 -1 ]]==v84[4]) then v76=v76 + (66 -(30 + 35)) ;else v76=v84[3 + 0 ];end elseif ((v85<=(23 -8)) or (4914<2480)) then if (v85<=((9 + 18) -15)) then if (v85>(1268 -(1043 + 214))) then v76=v84[11 -8 ];else v82[v84[1214 -(323 + 889) ]]=v84[7 -4 ];end elseif (v85<=((1991 -1398) -(248 + 113 + 219))) then v62[v84[323 -(53 + 267) ]]=v82[v84[1 + 1 ]];elseif (v85>(427 -(15 + 398))) then v82[v84[(2102 -(628 + 490)) -(18 + 964) ]]=v82[v84[5 -2 ]] + v82[v84[14 -10 ]] ;elseif (v82[v84[2 + 0 ]]<=v82[v84[3 + 1 ]]) then v76=v76 + 1 + 0 + 0 ;else v76=v84[853 -(20 + 830) ];end elseif (v85<=18) then if ((v85<=(13 + 3)) or (1559==1240)) then if ((566==566) and (v82[v84[128 -(116 + 10) ]]==v84[1 + 3 ])) then v76=v76 + (739 -(542 + 196)) ;else v76=v84[1099 -(709 + 387) ];end elseif (v85==(1875 -(673 + 1185))) then local v212=v84[3 -1 ];do return v13(v82,v212,v212 + v84[8 -(12 -7) ] );end else local v213=v84[(4 -3) + 1 ];v82[v213]=v82[v213](v82[v213 + 1 + 0 ]);end elseif ((3921>=3009) and (v85<=(7 + 12))) then v82[v84[4 -2 ]]();elseif ((2063>=1648) and (v85==((825 -(431 + 343)) -31))) then local v215=v84[1553 -(1126 + 425) ];local v216=v84[409 -((238 -120) + 287) ];local v217=v215 + 1 + 1 ;local v218={v82[v215](v82[v215 + (1122 -(118 + 1003)) ],v82[v217])};for v300=2 -1 ,v216 do v82[v217 + v300 ]=v218[v300];end local v219=v218[378 -(142 + 235) ];if v219 then v82[v217]=v219;v76=v84[13 -10 ];else v76=v76 + 1 + 0 ;end else v82[v84[979 -(553 + 424) ]]=v82[v84[5 -2 ]] + v82[v84[4]] ;end elseif (v85<=((344 -225) -87)) then if (v85<=(23 + 3)) then if (v85<=(23 + 0)) then if ((1066>=452) and (v85>22)) then if  not v82[v84[2 + 0 ]] then v76=v76 + 1 + 0 ;else v76=v84[3 + 0 ];end elseif ((4974>=2655) and v82[v84[1 + 1 + 0 ]]) then v76=v76 + 1 + 0 ;else v76=v84[6 -3 ];end elseif (v85<=(66 -42)) then local v146=0 -0 ;local v147;local v148;local v149;local v150;while true do if (v146==(1 + (1695 -(556 + 1139)))) then v77=(v149 + v147) -(4 -3) ;v150=753 -((254 -(6 + 9)) + 514) ;v146=1 + 1 + 0 ;end if ((v146==(0 + 0)) or (2721<=907)) then v147=v84[2 + 0 ];v148,v149=v75(v82[v147](v13(v82,v147 + ((682 + 648) -((966 -(28 + 141)) + 532)) ,v84[436 -(153 + 280) ])));v146=1 + 0 ;end if (v146==(1 + 1)) then for v347=v147,v77 do v150=v150 + (2 -1) ;v82[v347]=v148[v150];end break;end end elseif (v85==(1227 -(373 + 322 + 507))) then local v223=731 -(476 + 255) ;local v224;local v225;local v226;local v227;while true do if (v223==(1131 -(369 + 761))) then v77=(v226 + v224) -(1 + 0) ;v227=0 + 0 ;v223=2 -0 ;end if ((4437>=3031) and (v223==(2 -0))) then for v374=v224,v77 do v227=v227 + (668 -(89 + 578)) ;v82[v374]=v225[v227];end break;end if ((v223==(0 -0)) or (4470<2949)) then v224=v84[240 -(64 + 174) ];v225,v226=v75(v82[v224](v13(v82,v224 + 1 + (0 -0) ,v84[(3 + 0) -0 ])));v223=337 -((1461 -(486 + 831)) + 192) ;end end else v82[v84[2 + 0 ]]=v82[v84[219 -(42 + 174) ]] + v84[90 -(84 + 2) ] ;end elseif (v85<=(22 + 7)) then if (v85<=(20 + (18 -11))) then if  not v82[v84[2 + 0 ]] then v76=v76 + (3 -2) + 0 ;else v76=v84[(285 + 1222) -(363 + 1141) ];end elseif (v85==(1608 -(1183 + 397))) then v62[v84[8 -5 ]]=v82[v84[(6 -4) + (1263 -(668 + 595)) ]];else local v232=v84[3 + 0 ];local v233=v82[v232];for v304=v232 + ((1779 + 197) -(1913 + 62)) ,v84[3 + 1 ] do v233=v233   .. v82[v304] ;end v82[v84[1 + 1 ]]=v233;end elseif (v85<=(79 -(10 + 39))) then local v151=v84[(5276 -3341) -(565 + (1658 -(23 + 267))) ];v82[v151](v82[v151 + (3 -2) ]);elseif (v85==(28 + 3)) then if ((v82[v84[2]]==v82[v84[1665 -(1477 + 184) ]]) or (1580==2426)) then v76=v76 + (1 -0) ;else v76=v84[7 -4 ];end else local v235=v84[2 + 0 ];do return v13(v82,v235,v77);end end elseif ((v85<=(894 -(564 + 292))) or (3711==503)) then if (v85<=(524 -(457 + 32))) then if ((v85<=(56 -23)) or (420==4318)) then v82[v84[5 -3 ]]=v82[v84[307 -(244 + 60) ]];elseif (v85>(27 + 7)) then v82[v84[478 -(41 + 435) ]]=v63[v84[1004 -(938 + 63) ]];else local v238=v84[2 + (1944 -(1129 + 815)) ];local v239,v240=v75(v82[v238](v82[v238 + (1126 -(936 + 189)) ]));v77=(v240 + v238) -((388 -(371 + 16)) + 0) ;local v241=0;for v305=v238,v77 do local v306=0;while true do if (v306==((1750 -(1326 + 424)) + 0)) then v241=v241 + (1614 -(1565 + 48)) ;v82[v305]=v239[v241];break;end end end end elseif (v85<=(23 + 13)) then v82[v84[1140 -(782 + 356) ]][v84[(511 -241) -((643 -467) + (209 -(88 + 30))) ]]=v84[10 -6 ];elseif (v85>((2697 -(720 + 51)) -((3489 -1920) + 320))) then do return;end else local v242=v84[2 -0 ];v82[v242]=v82[v242]();end elseif (v85<=((2909 -(421 + 1355)) -(975 + 117))) then if (v85<=(1914 -(157 + 1718))) then v82[v84[2 + 0 ]]={};elseif ((v85>(141 -101)) or (4158<=33)) then do return v82[v84[(9 -3) -4 ]];end else local v244=v84[2];v82[v244](v13(v82,v244 + (1019 -(697 + 321)) ,v84[1456 -(666 + 787) ]));end elseif (v85<=(114 -72)) then if v82[v84[3 -1 ]] then v76=v76 + (2 -1) ;else v76=v84[2 + 1 ];end elseif (v85>(67 -(12 + 12))) then v82[v84[3 -1 ]]=v62[v84[(1090 -(286 + 797)) -4 ]];elseif ((v84[7 -5 ]<v82[v84[(2038 -807) -(322 + 905) ]]) or (99>4744)) then v76=v76 + 1 ;else v76=v84[614 -(602 + 9) ];end elseif (v85<=(1256 -(449 + 740))) then if (v85<=(927 -(826 + 46))) then if (v85<=(94 -45)) then if (v85<=(993 -(245 + 702))) then if (v85>(27 + 18)) then local v157=v84[2];v82[v157]=v82[v157](v13(v82,v157 + 1 ,v84[(450 -(397 + 42)) -(3 + 5) ]));else v82[v84[6 -4 ]]=v63[v84[1 + 2 ]];end elseif (v85<=(1945 -(260 + 1638))) then v82[v84[2 + 0 ]][v84[2 + 1 ]]=v82[v84[444 -(382 + 58) ]];elseif (v85>(153 -105)) then local v248=0 + (800 -(24 + 776)) ;local v249;local v250;local v251;while true do if ((4341==4341) and (v248==1)) then v251={};v250=v10({},{__index=function(v379,v380) local v381=1244 -(485 + 759) ;local v382;while true do if (v381==(0 -0)) then v382=v251[v380];return v382[2 -1 ][v382[1207 -(902 + 303) ]];end end end,__newindex=function(v383,v384,v385) local v386=v251[v384];v386[1 -0 ][v386[2]]=v385;end});v248=3 -1 ;end if ((255<=1596) and (v248==(946 -(88 + 858)))) then v249=v73[v84[1 + 2 + 0 ]];v250=nil;v248=2 -(191 -(23 + 167)) ;end if (v248==(1 + 1)) then for v388=1 + 0 ,v84[1694 -(1121 + 569) ] do local v389=214 -((1820 -(690 + 1108)) + 192) ;local v390;while true do if ((v389==(684 -(483 + 73 + 127))) or (4433<1635)) then if (v390[1464 -(1404 + 59) ]==(139 -88)) then v251[v388-(2 -1) ]={v82,v390[565 -(334 + 228) ]};else v251[v388-((3 + 0) -2) ]={v62,v390[1 + 2 ]};end v81[ #v81 + (237 -(141 + 16 + 79)) ]=v251;break;end if ((v389==(0 + 0)) or (4300<3244)) then v76=v76 + ((7 -5) -1) ;v390=v72[v76];v389=1685 -(1466 + 218) ;end end end v82[v84[4 -(2 + 0) ]]=v29(v249,v250,v63);break;end end else local v252=v84[2];local v253=v84[1152 -(556 + 592) ];local v254=v252 + 1 + 1 ;local v255={v82[v252](v82[v252 + (855 -(174 + 680)) ],v82[v254])};for v307=1,v253 do v82[v254 + v307 ]=v255[v307];end local v256=v255[1 + 0 ];if v256 then v82[v254]=v256;v76=v84[2 + 1 ];else v76=v76 + (1 -0) ;end end elseif (v85<=52) then if ((v85<=(36 + 14)) or (3534>4677)) then local v163=v84[2 + 0 ];local v164={v82[v163](v13(v82,v163 + 1 + 0 ,v77))};local v165=0 -0 ;for v191=v163,v84[(422 + 347) -(574 + 191) ] do local v192=0 + 0 ;while true do if ((0 -0)==v192) then v165=v165 + 1 + 0 ;v82[v191]=v164[v165];break;end end end elseif (v85==51) then v82[v84[2]]=v82[v84[852 -(254 + 595) ]];else v82[v84[128 -(55 + 71) ]]=v62[v84[(574 -(47 + 524)) -0 ]];end elseif (v85<=(1843 -(573 + 1217))) then v82[v84[5 -3 ]]=v84[3 + 0 ]~=(0 + 0) ;elseif (v85==(86 -32)) then v82[v84[1547 -(320 + 1225) ]]= #v82[v84[942 -(714 + 225) ]];else v76=v84[8 -5 ];end elseif (v85<=(84 -23)) then if ((v85<=(7 + 34 + 17)) or (4859<2999)) then if (v85<=(80 -24)) then local v167=806 -((322 -204) + (1028 -340)) ;local v168;local v169;while true do if ((49 -(25 + 23))==v167) then for v356=1 + 0 , #v81 do local v357=1886 -(927 + (2186 -1227)) ;local v358;while true do if ((4726>2407) and ((0 -(1726 -(1165 + 561)))==v357)) then v358=v81[v356];for v404=732 -(16 + 716) , #v358 do local v405=v358[v404];local v406=v405[1 -0 ];local v407=v405[1 + 1 + 0 ];if ((v406==v82) and (v407>=v168)) then v169[v407]=v406[v407];v405[98 -((34 -23) + 86) ]=v169;end end break;end end end break;end if ((v167==(0 -0)) or (1284>3669)) then v168=v84[287 -(67 + 108 + 110) ];v169={};v167=2 -1 ;end end elseif (v85>(281 -224)) then for v311=v84[1798 -(503 + 1293) ],v84[8 -5 ] do v82[v311]=nil;end else local v263=v84[3 + 0 ];local v264=v82[v263];for v313=v263 + (1062 -(810 + 251)) ,v84[3 + (480 -(341 + 138)) ] do v264=v264   .. v82[v313] ;end v82[v84[1 + 1 ]]=v264;end elseif (v85<=(15 + 39 + 5)) then local v170=v82[v84[537 -(43 + 490) ]];if ((1117<2549) and v170) then v76=v76 + 1 + 0 ;else v82[v84[735 -(711 + (45 -23)) ]]=v170;v76=v84[11 -8 ];end elseif (v85>(919 -(240 + 619))) then local v268=v84[2];local v269={};for v314=1 + 0 , #v81 do local v315=0 -0 ;local v316;while true do if (v315==(0 + 0)) then v316=v81[v314];for v399=1744 -(1344 + 400) , #v316 do local v400=405 -(255 + 150) ;local v401;local v402;local v403;while true do if (v400==(1 + 0)) then v403=v401[604 -(512 + 90) ];if ((v402==v82) and (v403>=v268)) then v269[v403]=v402[v403];v401[1 + (326 -(89 + 237)) ]=v269;end break;end if (v400==((0 -0) -0)) then v401=v316[v399];v402=v401[3 -2 ];v400=1740 -(404 + 1335) ;end end end break;end end end elseif (v84[408 -(183 + 223) ]==v82[v84[4]]) then v76=v76 + ((1 -0) -0) ;else v76=v84[2 + 1 ];end elseif (v85<=(24 + 40)) then if (v85<=(399 -(10 + 327))) then v82[v84[2 -0 ]]=v82[v84[3 + 0 ]][v82[v84[(1984 -(581 + 300)) -(35 + 1064) ]]];elseif (v85>(401 -(118 + 220))) then do return v82[v84[1 + (1221 -(855 + 365)) ]];end else local v270=v82[v84[453 -(108 + 341) ]];if (v270 or (2851>4774)) then v76=v76 + 1 + 0 ;else v82[v84[8 -(13 -7) ]]=v270;v76=v84[1669 -(636 + 1030) ];end end elseif ((1031<3848) and (v85<=(34 + 31))) then if (v84[1495 -(711 + 782) ]<v82[v84[2 + 2 ]]) then v76=v76 + 1 + 0 ;else v76=v84[5 -2 ];end elseif (v85==(5 + 8 + 53)) then if (v82[v84[471 -(270 + 199) ]]<=v82[v84[2 + 2 ]]) then v76=v76 + (1820 -(580 + 1239)) ;else v76=v84[8 -(1240 -(1030 + 205)) ];end else v82[v84[2 + 0 ]]();end elseif (v85<=(3 + 75)) then if (v85<=(32 + 40)) then if ((1854>903) and (v85<=(179 -110))) then if (v85==(118 -50)) then local v173=0 + 0 + 0 ;local v174;while true do if ((4663>1860) and (v173==0)) then v174=v84[1169 -(601 + 44 + 522) ];v82[v174]=v82[v174](v82[v174 + 1 + 0 ]);break;end end else local v175=1790 -(1010 + 780) ;local v176;local v177;while true do if (v175==(1 + 0)) then v82[v176 + 1 + 0 ]=v177;v82[v176]=v177[v84[(305 -(156 + 130)) -15 ]];break;end if ((v175==(0 -0)) or (3053<=469)) then v176=v84[1838 -(1045 + 791) ];v177=v82[v84[7 -4 ]];v175=1;end end end elseif (v85<=(106 -36)) then v82[v84[507 -(351 + 154) ]]= #v82[v84[1175 -((1785 -999) + 386) ]];elseif (v85==((2772 -1127) -(1281 + 293))) then v82[v84[268 -(28 + 238) ]][v84[6 -3 ]]=v82[v84[1563 -(1381 + 178) ]];else local v274=v84[2 + 0 ];local v275={v82[v274](v82[v274 + 1 + 0 ])};local v276=0 + 0 ;for v324=v274,v84[13 -9 ] do v276=v276 + 1 + 0 ;v82[v324]=v275[v276];end end elseif (v85<=(545 -(381 + 89))) then if (v85<=(65 + 3 + 5)) then local v179=0 -0 ;local v180;while true do if (v179==(0 + 0)) then v180=v84[2 -0 ];v82[v180](v13(v82,v180 + (1157 -(1074 + 82)) ,v84[3 + 0 ]));break;end end elseif (v85>(188 -114)) then local v277=v84[3 -1 ];local v278,v279=v75(v82[v277](v82[v277 + (1785 -(214 + 916 + 654)) ]));v77=(v279 + v277) -(1456 -(990 + (534 -(10 + 59)))) ;local v280=0 + 0 + 0 ;for v328=v277,v77 do v280=v280 + 1 + (0 -0) ;v82[v328]=v278[v280];end elseif ((v84[1 + 1 ]==v82[v84[4 + (1163 -(671 + 492)) ]]) or (540>=1869)) then v76=v76 + (3 -2) ;else v76=v84[1729 -(1668 + 58) ];end elseif ((3292==3292) and (v85<=(702 -(512 + 114)))) then local v181=v84[2];v82[v181]=v82[v181](v13(v82,v181 + (2 -1) ,v84[5 -2 ]));elseif (v85>(1163 -(686 + 400))) then do return;end else v82[v84[2]]=v82[v84[10 -7 ]][v84[2 + 2 ]];end elseif ((1038<=2645) and (v85<=(16 + 68))) then if (v85<=(892 -(721 + 72 + 18))) then if (v85<=((1284 -(369 + 846)) + 10)) then local v183=v84[6 -(2 + 2) ];local v184={v82[v183](v82[v183 + (3 -2) ])};local v185=0 -0 ;for v193=v183,v84[1998 -(109 + 1885) ] do v185=v185 + (1470 -(1269 + 200)) ;v82[v193]=v184[v185];end elseif (v85==(153 -73)) then local v283=(696 + 119) -(98 + 717) ;local v284;while true do if ((v283==(826 -(802 + 24))) or (3230<2525)) then v284=v84[2 -0 ];v82[v284]=v82[v284](v13(v82,v284 + (1 -0) ,v77));break;end end else v82[v84[1 + 1 ]]=v84[(1948 -(1036 + 909)) + 0 ]~=(0 + 0) ;end elseif ((v85<=(18 + 64)) or (2400>4083)) then local v186=v84[5 -3 ];local v187={v82[v186](v13(v82,v186 + (3 -2) ,v77))};local v188=0;for v196=v186,v84[2 + 2 ] do v188=v188 + 1 ;v82[v196]=v187[v188];end elseif ((v85>(34 + 49)) or (2745>4359)) then local v286=v73[v84[3 + 0 ]];local v287;local v288={};v287=v10({},{__index=function(v331,v332) local v333=0 + 0 ;local v334;while true do if (v333==(0 + 0)) then v334=v288[v332];return v334[1434 -(797 + 636) ][v334[9 -7 ]];end end end,__newindex=function(v335,v336,v337) local v338=1619 -(1427 + 192) ;local v339;while true do if (v338==(0 + 0)) then v339=v288[v336];v339[1 + 0 ][v339[2]]=v337;break;end end end});for v340=2 -1 ,v84[4 + 0 ] do v76=v76 + 1 + 0 ;local v341=v72[v76];if ((172<=1810) and (v341[327 -(192 + 134) ]==(1504 -(28 + 1425)))) then v288[v340-(1994 -((1579 -638) + (1255 -(11 + 192)))) ]={v82,v341[2 + 1 ]};else v288[v340-(1 + 0) ]={v62,v341[300 -(45 + 252) ]};end v81[ #v81 + ((178 -(135 + 40)) -2) ]=v288;end v82[v84[553 -(83 + 468) ]]=v29(v286,v287,v63);else local v290=v84[4 -2 ];do return v82[v290](v13(v82,v290 + (1807 -(1202 + 604)) ,v84[13 -(24 -14) ]));end end elseif ((v85<=((87 + 57) -(125 -68))) or (492>=4959)) then if ((v85<=((352 -117) -150)) or (756==2072)) then v82[v84[327 -(45 + 280) ]]=v82[v84[3 + (176 -(50 + 126)) ]][v84[4 + 0 ]];elseif (v85==(32 + 54)) then v82[v84[2]]=v29(v73[v84[2 + 1 ]],nil,v63);else v82[v84[1 + 1 ]]={};end elseif (v85<=(162 -74)) then if (v82[v84[1913 -(340 + 1571) ]]==v82[v84[2 + 2 ]]) then v76=v76 + 1 + 0 ;else v76=v84[1775 -((4825 -3092) + 39) ];end elseif (v85>(244 -155)) then local v294=v84[1232 -(957 + 61 + 212) ];v82[v294](v82[v294 + (1035 -(125 + 909)) ]);else v82[v84[2]]=v29(v73[v84[1951 -(1096 + 852) ]],nil,v63);end v76=v76 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
